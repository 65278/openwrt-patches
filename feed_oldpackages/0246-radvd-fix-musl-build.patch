From f61822f1946c2e26ebc8d01912f9f1ad325e9ece Mon Sep 17 00:00:00 2001
From: Dirk Neukirchen <dirkneukirchen@web.de>
Date: Thu, 13 Aug 2015 19:54:43 +0200
Subject: [PATCH 246/310] radvd: fix musl build

Signed-off-by: Dirk Neukirchen <dirkneukirchen@web.de>
---
 ipv6/radvd/Makefile                                |  9 ++-
 .../001-upstream-IEEE802154_musl_libc_fix.patch    | 84 ++++++++++++++++++++++
 .../patches/100-silent-netlink-config-reload.patch | 67 -----------------
 3 files changed, 90 insertions(+), 70 deletions(-)
 create mode 100644 ipv6/radvd/patches/001-upstream-IEEE802154_musl_libc_fix.patch
 delete mode 100644 ipv6/radvd/patches/100-silent-netlink-config-reload.patch

diff --git a/ipv6/radvd/Makefile b/ipv6/radvd/Makefile
index 61d47c4..2a9cd65 100644
--- a/ipv6/radvd/Makefile
+++ b/ipv6/radvd/Makefile
@@ -8,14 +8,15 @@
 include $(TOPDIR)/rules.mk
 
 PKG_NAME:=radvd
-PKG_VERSION:=1.9.1
-PKG_RELEASE:=2
+PKG_VERSION:=2.11
+PKG_RELEASE:=1
 
 PKG_SOURCE:=$(PKG_NAME)-$(PKG_VERSION).tar.gz
 PKG_SOURCE_URL:=http://v6web.litech.org/radvd/dist \
 		http://download.sourcemage.org/mirror
-PKG_MD5SUM:=e807ad7e9a76d46b6133df391385cd31
+PKG_MD5SUM:=57fc6021f6a5e5472e455937685472a3
 
+PKG_FIXUP:=autoreconf
 PKG_INSTALL:=1
 
 include $(INCLUDE_DIR)/package.mk
@@ -52,6 +53,8 @@ or some other software implementing (parts of) "Neighbor Discovery for IP
 Version 6 (IPv6)" (RFC 4861).
 endef
 
+TARGET_CFLAGS+=-std=gnu99
+
 CONFIGURE_ARGS += \
 	--with-configfile=/etc/radvd.conf \
 	--with-logfile=/var/log/radvd.log \
diff --git a/ipv6/radvd/patches/001-upstream-IEEE802154_musl_libc_fix.patch b/ipv6/radvd/patches/001-upstream-IEEE802154_musl_libc_fix.patch
new file mode 100644
index 0000000..02a05d4
--- /dev/null
+++ b/ipv6/radvd/patches/001-upstream-IEEE802154_musl_libc_fix.patch
@@ -0,0 +1,84 @@
+From 1d8973e13d89802eee0b648451e2b97ac65cf9e0 Mon Sep 17 00:00:00 2001
+From: Reuben Hawkins <reubenhwk@gmail.com>
+Date: Sat, 16 May 2015 09:27:38 -0700
+Subject: [PATCH] device-linux.c: IEEE 802.15.4 musl libc fix
+
+The ARPHRD_IEEE802154 macro's definition and name have been recently
+moved around from kernel header to glibc headers.  Include linux/if_arp.h
+if available and then use either ARPHRD_IEEE802154_MONITOR or ARPHRD_IEEE802154_PHY,
+whichever comes first.
+---
+ configure.ac   | 1 +
+ device-linux.c | 8 ++++++++
+ includes.h     | 6 ++++++
+ 3 files changed, 15 insertions(+)
+
+diff --git a/configure.ac b/configure.ac
+index 0c1efd6..4bd4c9d 100644
+--- a/configure.ac
++++ b/configure.ac
+@@ -156,6 +156,7 @@ AC_HEADER_STDC
+ AC_CHECK_HEADERS( \
+ 	getopt.h \
+ 	ifaddrs.h \
++	linux/if_arp.h \
+ 	machine/limits.h \
+ 	machine/param.h \
+ 	net/if_arp.h \
+diff --git a/device-linux.c b/device-linux.c
+index fa7d978..de83f2e 100644
+--- a/device-linux.c
++++ b/device-linux.c
+@@ -79,10 +79,12 @@ int update_device_info(int sock, struct Interface *iface)
+ 		iface->sllao.if_maxmtu = -1;
+ 		break;
+ #endif				/* ARPHDR_ARCNET */
++#ifdef ARPHRD_IEEE802154
+ 	case ARPHRD_IEEE802154:
+ 		iface->sllao.if_hwaddr_len = 64;
+ 		iface->sllao.if_prefix_len = 64;
+ 		break;
++#endif
+ 	default:
+ 		iface->sllao.if_hwaddr_len = -1;
+ 		iface->sllao.if_prefix_len = -1;
+@@ -371,9 +373,15 @@ static char const *hwstr(unsigned short sa_family)
+ 	case ARPHRD_IEEE802154:
+ 		rc = "ARPHRD_IEEE802154";
+ 		break;
++#if ARPHRD_IEEE802154_MONITOR
++	case ARPHRD_IEEE802154_MONITOR:
++		rc = "ARPHRD_IEEE802154_MONITOR";
++		break;
++#elif ARPHRD_IEEE802154_PHY
+ 	case ARPHRD_IEEE802154_PHY:
+ 		rc = "ARPHRD_IEEE802154_PHY";
+ 		break;
++#endif
+ 	case ARPHRD_VOID:
+ 		rc = "ARPHRD_VOID";
+ 		break;
+diff --git a/includes.h b/includes.h
+index 39a36d2..d2449c4 100644
+--- a/includes.h
++++ b/includes.h
+@@ -81,9 +81,11 @@
+ #ifdef HAVE_NET_IF_DL_H
+ #include <net/if_dl.h>
+ #endif
++
+ #ifdef HAVE_NET_IF_TYPES_H
+ #include <net/if_types.h>
+ #endif
++
+ #if defined(HAVE_NET_IF_ARP_H) && !defined(ARPHRD_ETHER)
+ #include <net/if_arp.h>
+ #endif				/* defined(HAVE_NET_IF_ARP_H) && !defined(ARPHRD_ETHER) */
+@@ -100,3 +102,7 @@
+ #include <ifaddrs.h>
+ #endif
+ 
++#ifdef HAVE_LINUX_IF_ARP_H
++#include <linux/if_arp.h>
++#endif
++
diff --git a/ipv6/radvd/patches/100-silent-netlink-config-reload.patch b/ipv6/radvd/patches/100-silent-netlink-config-reload.patch
deleted file mode 100644
index 049d654..0000000
--- a/ipv6/radvd/patches/100-silent-netlink-config-reload.patch
+++ /dev/null
@@ -1,67 +0,0 @@
---- a/netlink.c
-+++ b/netlink.c
-@@ -67,7 +67,7 @@ void process_netlink_msg(int sock)
- 		else {
- 			dlog(LOG_DEBUG, 3, "%s, ifindex %d, flags is *NOT* running", ifname, ifinfo->ifi_index);
- 		}
--		reload_config();
-+		reload_config(LOG_DEBUG);
- 	}
- }
- 
---- a/radvd.c
-+++ b/radvd.c
-@@ -443,7 +443,7 @@ void main_loop(void)
- 		if (sighup_received)
- 		{
- 			dlog(LOG_INFO, 3, "sig hup received.\n");
--			reload_config();
-+			reload_config(LOG_INFO);
- 			sighup_received = 0;
- 		}
- 
-@@ -552,11 +552,11 @@ stop_adverts(void)
- 	}
- }
- 
--void reload_config(void)
-+void reload_config(int loglevel)
- {
- 	struct Interface *iface;
- 
--	flog(LOG_INFO, "attempting to reread config file");
-+	flog(loglevel, "attempting to reread config file");
- 
- 	iface=IfaceList;
- 	while(iface)
-@@ -626,7 +626,7 @@ void reload_config(void)
- 	config_interface();
- 	kickoff_adverts();
- 
--	flog(LOG_INFO, "resuming normal operation");
-+	flog(loglevel, "resuming normal operation");
- }
- 
- void
---- a/radvd.h
-+++ b/radvd.h
-@@ -185,7 +185,7 @@ int yylex(void);
- 
- /* radvd.c */
- int check_ip6_forwarding(void);
--void reload_config(void);
-+void reload_config(int);
- void reset_prefix_lifetimes(void);
- 
- /* timer.c */
---- a/send.c
-+++ b/send.c
-@@ -154,7 +154,7 @@ send_ra(struct Interface *iface, struct
- 			 * reload_config() will kick off new timers anyway.  This avoids
- 			 * timer list corruption.
- 			 */
--			reload_config();
-+			reload_config(LOG_INFO);
- 			return -1;
- 		}
- 	}
-- 
2.5.0

