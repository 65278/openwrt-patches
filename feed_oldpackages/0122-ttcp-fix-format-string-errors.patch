From ded3b3e54205050547b04d33b2e0cfc2fda899f1 Mon Sep 17 00:00:00 2001
From: Dirk Neukirchen <dirkneukirchen@web.de>
Date: Sun, 10 May 2015 11:27:35 +0200
Subject: [PATCH 122/310] ttcp: fix format string errors

Signed-off-by: Dirk Neukirchen <dirkneukirchen@web.de>
---
 net/ttcp/Makefile |   4 +-
 net/ttcp/ttcp.c   | 396 +++++++++++++++++++++++++++---------------------------
 2 files changed, 200 insertions(+), 200 deletions(-)

diff --git a/net/ttcp/Makefile b/net/ttcp/Makefile
index 3badab6..7da16c8 100644
--- a/net/ttcp/Makefile
+++ b/net/ttcp/Makefile
@@ -26,11 +26,11 @@ define Package/ttcp/description
 	A small utility to test TCP connection performance.
 endef
 
-define Build/Compile		
+define Build/Compile
 	$(TARGET_CC) $(TARGET_CFLAGS) -o $(PKG_BUILD_DIR)/ttcp ttcp.c
 endef
 
-define Package/ttcp/install	
+define Package/ttcp/install
 	$(INSTALL_DIR) $(1)/usr/bin
 	$(INSTALL_BIN) $(PKG_BUILD_DIR)/ttcp $(1)/usr/bin/
 endef
diff --git a/net/ttcp/ttcp.c b/net/ttcp/ttcp.c
index 7233ace..8b8457f 100644
--- a/net/ttcp/ttcp.c
+++ b/net/ttcp/ttcp.c
@@ -71,12 +71,12 @@ static char VersDate[] = "Epigram 15-jul-98";
 
 /*                system dependent setting
  *                ------------------------
- * uname -a,gcc -v a.c are the tools used                              
+ * uname -a,gcc -v a.c are the tools used
  *
- * Platform/OS          #define         MACRO predefined 
+ * Platform/OS          #define         MACRO predefined
  * -----------          -------   ---------------------------------------------------
  * SunOS OS             BSD43     __unix__   __sun__   __sparc__
- * SUN Solaris           SYSV     __unix__   __sun__   __sparc__   __svr4__ 
+ * SUN Solaris           SYSV     __unix__   __sun__   __sparc__   __svr4__
  * SGI-IRIX  < 3.3 SYSV     set as #define sgi
  * HP-UX 9000           SYSV      __unix__   __hpux__  __hp9k8__
  * OSF/1 V3.2           SYSV      __unix__   __osf__   __alpha__
@@ -84,15 +84,15 @@ static char VersDate[] = "Epigram 15-jul-98";
  * LynxOS               SYSV      __unix__   __lynx__  __powerpc__
  * Windows NT           SYSV                 __WINNT__ __i386__    __M_COFF__
  * AIX                  SYSV      _AIX       _AIX32    _POWER      _IBMR2   _ARCH_PWR
- 
+
 
  * Micosoft Visual C++ compiler under WindowNT 4.0
- * Windows NT                    _WINDOWS    WIN32 
+ * Windows NT                    _WINDOWS    WIN32
 
  * Unix BSD 41a         BSD41a
  *          42          BSD42
  *          43          BSD43
- 
+
  * Machines using System V with BSD sockets should define SYSV.
  *
  *            Compiler commands 
@@ -102,15 +102,15 @@ static char VersDate[] = "Epigram 15-jul-98";
 
 /* -------------attempt to set an automatic UNIX  OS family detection -------*/
 
-#if defined(__hp9k8__) || defined(__osf__) || defined(__srv4__)  
+#if defined(__hp9k8__) || defined(__osf__) || defined(__srv4__)
 #define SYSV
 #endif
-#if defined(__lynx__)  
+#if defined(__lynx__)
 #define SYSV
 #endif
 /* for solaris (__srv4__) the parameters SYSV is already set */
 
-/* version A.09.01  'key words' differs from A.09.05 A */ 
+/* version A.09.01  'key words' differs from A.09.05 A */
 #if defined(__hpux)
 #define __hpux__
 #endif
@@ -122,7 +122,7 @@ static char VersDate[] = "Epigram 15-jul-98";
 #if defined(_WIN32)                /* Window NT 4.0 compiled with VisualC++ 4 */
 #define __NTVIS__
 #define SYSV
-#endif 
+#endif
 
 #if defined(__FreeBSD__)
 #define BSD43
@@ -142,16 +142,16 @@ static char VersDate[] = "Epigram 15-jul-98";
 
 #if defined(SYSV)
 
-#if defined(__osf__) 
+#if defined(__osf__)
 #include <sys/socket.h>
 #include <netinet/in.h>
 #include <netinet/tcp.h>
 #include <arpa/inet.h>
 #include <netdb.h>
 #include <sys/time.h>           /* struct timeval */
-#include <sys/resource.h>       /* definition of struct rusage */    
+#include <sys/resource.h>       /* definition of struct rusage */
 
-#else  /* else of __osf__ */ 
+#else  /* else of __osf__ */
 #if defined(__NTVIS__)
 #include <winsock2.h>
 #include <windows.h>            /* required for all Windows applications */
@@ -166,19 +166,19 @@ static char VersDate[] = "Epigram 15-jul-98";
 #include <io.h>
 struct rusage { struct timeval ru_utime, ru_stime; };
 #define RUSAGE_SELF 0
-#else  /* else of __NTVIS__ */  
+#else  /* else of __NTVIS__ */
 #if defined(__lynx__)
 #include <socket.h>             /* located in  /usr/include/..... */
-#include <netinet/in.h>    
-#include <netinet/tcp.h> 
-#include <arpa/inet.h>     
-#include <netdb.h>         
-#include <time.h> 
-#include <resource.h>           /* definition of struct rusage */    
+#include <netinet/in.h>
+#include <netinet/tcp.h>
+#include <arpa/inet.h>
+#include <netdb.h>
+#include <time.h>
+#include <resource.h>           /* definition of struct rusage */
 #include <sys/times.h>
 #define RUSAGE_SELF 0
 #include <conf.h>               /* definition of TICKSPERSEC (HZ) */
-#include <sys/param.h>     
+#include <sys/param.h>
 
 #else  /* else of __Lynx__  */
 #if defined(__svr4__)
@@ -189,10 +189,10 @@ struct rusage { struct timeval ru_utime, ru_stime; };
 #include <arpa/inet.h>
 #include <netdb.h>
 #include <sys/time.h>           /* struct timeval */
-#include <sys/resource.h>       /* definition of struct rusage */    
+#include <sys/resource.h>       /* definition of struct rusage */
 #include <sys/times.h>
 #define RUSAGE_SELF 0
-#include <sys/param.h>     
+#include <sys/param.h>
 
 #else  /* else of __svr4__    all SYSV cases except those mentionned before */
 #include <sys/socket.h>
@@ -201,10 +201,10 @@ struct rusage { struct timeval ru_utime, ru_stime; };
 #include <arpa/inet.h>
 #include <netdb.h>
 #include <sys/time.h>           /* struct timeval */
-#include <sys/resource.h>       /* definition of struct rusage */    
+#include <sys/resource.h>       /* definition of struct rusage */
 #include <sys/times.h>
 #define RUSAGE_SELF 0
-#include <sys/param.h>     
+#include <sys/param.h>
 
 #endif /* __svr4__  */
 #endif /* __lynx__  */
@@ -264,8 +264,8 @@ char   *optarg;                      // argument associated with option
 char *progname;                      // may also be defined elsewhere
 #endif /*__NTVIS__*/
 
-/* sockaddr_in ==  file server address structure 
- * 
+/* sockaddr_in ==  file server address structure
+ *
  * Socket address, internet style.   declared in : /netinet/in.h
  * struct sockaddr_in {short   sin_family;
  *                     u_short sin_port;
@@ -275,9 +275,9 @@ char *progname;                      // may also be defined elsewhere
  *
  * Structure used by kernel to store most addresses. declared in ./sys/socket.h
  * struct sockaddr{u_short sa_family;       address family
- *                 char    sa_data[14];     up to 14 bytes of direct address 
+ *                 char    sa_data[14];     up to 14 bytes of direct address
  *                };
- * PS : sin stand for "socket internet number" 
+ * PS : sin stand for "socket internet number"
  */
 
 #ifndef __NTVIS__
@@ -294,12 +294,12 @@ char *progname;                      // may also be defined elsewhere
 
 #if defined(__sun__)
 struct sockaddr_in sockaddr;   /* done in ./X11/Xdmcp.h */
-#endif 
+#endif
 
 struct sockaddr_in sinme;     /* is the socket struct. in the local host */
 struct sockaddr_in sinhim;    /* is the socket struc. in the remote host */
 
-#if defined(__lynx__) || defined(__svr4__) || defined(_AIX) 
+#if defined(__lynx__) || defined(__svr4__) || defined(_AIX)
 struct sockaddr frominet;
 #else
 struct sockaddr_in frominet;
@@ -314,7 +314,7 @@ SOCKET fd;                             /* fd of network socket */
 
 #if !defined(__lynx__)
 extern int errno;
-#endif 
+#endif
 
 #include <stdio.h>
 
@@ -408,7 +408,7 @@ int  gettimeofday(struct timeval *tp, struct timezone *tzp);
 #else
 #if defined(__svr4__)
 
-#else 
+#else
 #if defined(_AIX)
 
 #else
@@ -429,9 +429,9 @@ int  gettimeofday(struct timeval *tp, struct timezone *tzp);
 #endif  /* __hpux__ */
 #endif  /*  _AIX    */
 #endif  /* __svr4__ */
-#endif  /* __lynx__ */ 
+#endif  /* __lynx__ */
 
-int main(int argc, char* argv[]); 
+int main(int argc, char* argv[]);
 #if ( (!(defined(BSD42))) && (!(defined(BSD43))) && (!(defined(__NTVIS__))) )
 int  read(int, char*, int);
 int  write(int, char*, int);
@@ -450,13 +450,13 @@ int  malloc(int);
 
                            /* ANSI socket functions prototype /sys/socket.h */
 #if defined(__lynx__)
-int  select(int, fd_set*, fd_set*, fd_set*, struct timeval*); 
+int  select(int, fd_set*, fd_set*, fd_set*, struct timeval*);
 
-#else 
+#else
 #if defined(__svr4__) && !defined(sparc)
 
 /*  informations in : /usr/include/sys/socket.h */
-int  socket(int, int, int); 
+int  socket(int, int, int);
 int  connect(int, struct sockaddr *, int);
 int  bind(int, struct sockaddr *, int);
 int  listen(int, int);
@@ -465,7 +465,7 @@ int  sendto(int, const char *, int, int, const struct sockaddr *, int);
 int  recvfrom(int, char *, int, int, struct sockaddr *, int *);
 int  getpeername(int, struct sockaddr *, int *);
 int  getsockopt(int, int, int, char *, int *);
-int  select(int, fd_set*, fd_set*, fd_set*, struct timeval*); 
+int  select(int, fd_set*, fd_set*, fd_set*, struct timeval*);
 
 #else
 #if defined(_AIX)
@@ -475,7 +475,7 @@ int  select(unsigned long, void *, void *, void *, struct timeval *);
 #if defined(__hpux__)
 int getrusage(int who,struct rusage *rusage);
 
-#else 
+#else
 #if defined(__NTVIS__)
 
 #else
@@ -494,13 +494,13 @@ int  getpeername(int, struct sockaddr *, int *);
 int  setsockopt(int, int, int, char *, int);
 
 int  getsockopt(int, int, int, char*, int*);
-int  select(int, fd_set*, fd_set*, fd_set*, struct timeval*); 
+int  select(int, fd_set*, fd_set*, fd_set*, struct timeval*);
 
 #endif /* BSD42 || BSD43 */
 #endif /* __hpux__ */
 #endif /*  _AIX    */
 #endif /* __svr4__ */
-#endif /* __lynx__ */ 
+#endif /* __lynx__ */
 #endif /* __NTVIS__ */
 
 /* ttcp prototype functions */
@@ -532,7 +532,7 @@ void do_help(void);
 
 /*--------------------------------------------------------------------------*/
 #if !defined(__NTVIS__)
-void 
+void
 sigpipe()
 {;
 }
@@ -618,7 +618,7 @@ main(int argc, char **argv)
 #ifdef TCP_NODELAY
         nodelay = 1;
 #else
-        fprintf(stderr, 
+        fprintf(stderr,
        "ttcp: -D option ignored: TCP_NODELAY socket option not supported\n");
 #endif
           break;
@@ -650,7 +650,7 @@ main(int argc, char **argv)
 #if defined(SO_SNDBUF) || defined(SO_RCVBUF)
           sockbufsize = atoi(optarg);
 #else
-          fprintf(stderr, 
+          fprintf(stderr,
 "ttcp: -b option ignored: SO_SNDBUF/SO_RCVBUF socket options not supported\n");
 #endif
           break;
@@ -663,7 +663,7 @@ main(int argc, char **argv)
         case 'i':
           seq_info = 1;
           break;
-          
+
       default:
           {do_Usage(); exit(1);}
        }/*switch */
@@ -672,7 +672,7 @@ main(int argc, char **argv)
     argc -= optind;
     argv += optind;
     optind = 0;
-    
+
     /* check for '--' args */
     if (argc == 0) {
       /* no more args */
@@ -699,8 +699,8 @@ main(int argc, char **argv)
       break; /* while (1) */
     }
   } /* while (1) */
-  
-    
+
+
  /* ----------------------- main part ----------------------- */
 
 #if defined(__NTVIS__) && !defined(UNDER_CE)
@@ -763,21 +763,21 @@ if (bufmin > buflen) {
 #endif /* __NTVIS__ */
  }
 
- if(trans)  
+ if(trans)
    {/* xmitr */
      if (argc == 0) {
        fprintf(stderr, "ttcp: missing destination host arg\n");
        do_Usage(); exit(1);
      }
-     
+
      bzero((char *)&sinhim, sizeof(sinhim));
      host = argv[0];
-     if (atoi(host) > 0 )  
+     if (atoi(host) > 0 )
        {/* Numeric */
          sinhim.sin_family = AF_INET;
          sinhim.sin_addr.s_addr = inet_addr(host);
-       } 
-     else 
+       }
+     else
        {if ((addr=gethostbyname(host)) == NULL) sockets_err("bad hostname");
         sinhim.sin_family = addr->h_addrtype;
         bcopy(addr->h_addr,(char*)&addr_tmp, addr->h_length);
@@ -785,15 +785,15 @@ if (bufmin > buflen) {
        }
      sinhim.sin_port = htons(port);
      sinme.sin_port = 0;                /* free choice */
-   } 
- else 
+   }
+ else
    {/* rcvr */
      sinme.sin_port =  htons(port);
    }
 #if defined(__NTVIS__)
  sinme.sin_family = AF_INET;
 #endif
- 
+
  fd = socket(AF_INET, udp?SOCK_DGRAM:SOCK_STREAM, 0);
 
 #if defined(__NTVIS__)
@@ -801,7 +801,7 @@ if (bufmin > buflen) {
 #else
  if (fd < 0) sockets_err("socket");
 #endif
- 
+
  if (verbose) {
 	char *label = trans?"ttcp-t":"ttcp-r";
 #if defined(UNDER_CE)
@@ -813,8 +813,8 @@ if (bufmin > buflen) {
 		SystemTime.wDay, SystemTime.wHour, SystemTime.wMinute, SystemTime.wSecond, SystemTime.wYear);
 #else
    time_t now;
-   char *time_str; 
-       
+   char *time_str;
+
    time(&now);
    time_str = ctime(&now);
 #endif
@@ -823,42 +823,42 @@ if (bufmin > buflen) {
  }
 
 #if defined(__NTVIS__)
- if (bind(fd, (struct sockaddr FAR *)&sinme, sizeof(sinme)) == SOCKET_ERROR) 
+ if (bind(fd, (struct sockaddr FAR *)&sinme, sizeof(sinme)) == SOCKET_ERROR)
    sockets_err("bind");
 #else
- if (bind(fd, SOCKADDR_CAST &sinme, sizeof(sinme)) < 0) 
+ if (bind(fd, SOCKADDR_CAST &sinme, sizeof(sinme)) < 0)
    sockets_err("bind");
 #endif /* __NTVIS__ */
 
 
 #if defined(SO_SNDBUF) || defined(SO_RCVBUF)
- if (sockbufsize) 
+ if (sockbufsize)
    {
 #if defined(__lynx__) || defined(__sun__)  || defined(__NTVIS__)
-     if (trans) 
+     if (trans)
        {if (setsockopt(fd, SOL_SOCKET, SO_SNDBUF, (char *)&sockbufsize,
-                       sizeof sockbufsize) < 0)  
+                       sizeof sockbufsize) < 0)
         sockets_err("setsockopt: sndbuf");
-       } 
-     else 
+       }
+     else
        {if (setsockopt(fd, SOL_SOCKET, SO_RCVBUF, (char *)&sockbufsize,
-                       sizeof sockbufsize) < 0)  
+                       sizeof sockbufsize) < 0)
         sockets_err("setsockopt: rcvbuf");
        }
 
 #else
-     if (trans) 
+     if (trans)
 
          {if (setsockopt(fd, SOL_SOCKET, SO_SNDBUF, &sockbufsize,
-                       sizeof sockbufsize) < 0) 
+                       sizeof sockbufsize) < 0)
         sockets_err("setsockopt: sndbuf");
-       } 
-     else 
+       }
+     else
        {if (setsockopt(fd, SOL_SOCKET, SO_RCVBUF, &sockbufsize,
-                       sizeof sockbufsize) < 0) 
+                       sizeof sockbufsize) < 0)
         sockets_err("setsockopt: rcvbuf");
        }
-#endif /* __lynx__ __sun__ __NTVIS__ */ 
+#endif /* __lynx__ __sun__ __NTVIS__ */
    }
  else
    {/*
@@ -866,10 +866,10 @@ if (bufmin > buflen) {
     */
      sockbuflen = sizeof sockbufsndsize;
 #if defined(__lynx__) || defined(__sun__) || defined(__NTVIS__)
-     getsockopt(fd, SOL_SOCKET, SO_SNDBUF, (char *)&sockbufsndsize, 
+     getsockopt(fd, SOL_SOCKET, SO_SNDBUF, (char *)&sockbufsndsize,
                 &sockbuflen);
      sockbuflen = sizeof sockbufrcvsize;
-     getsockopt(fd, SOL_SOCKET, SO_RCVBUF, (char *)&sockbufrcvsize, 
+     getsockopt(fd, SOL_SOCKET, SO_RCVBUF, (char *)&sockbufrcvsize,
                      &sockbuflen);
 #else
      getsockopt(fd, SOL_SOCKET, SO_SNDBUF, &sockbufsndsize, &sockbuflen);
@@ -884,7 +884,7 @@ if (bufmin > buflen) {
        }
    }
 #endif /* defined(SO_SNDBUF) || defined(SO_RCVBUF) */
- 
+
  if (sockbufsize) fprintf(stderr, "sockbufsize=%d, \n", sockbufsize);
 
  if (log_cnt)
@@ -893,23 +893,23 @@ if (bufmin > buflen) {
    }
 
 #if defined(__linux__)
- if (setsockopt(fd, SOL_SOCKET, SO_PRIORITY, (char *)&pri, sizeof pri) < 0)  
+ if (setsockopt(fd, SOL_SOCKET, SO_PRIORITY, (char *)&pri, sizeof pri) < 0)
    sockets_err("setsockopt: priority");
 #endif
 
 
  if (trans)  fprintf(stderr, "# %s sender -> %s #\n", udp?"udp":"tcp", host);
  else        fprintf(stderr, "# %s receiver #\n", udp?"udp":"tcp");
- 
- if (!udp)  
+
+ if (!udp)
    {
 #if !defined(__NTVIS__)
      signal(SIGPIPE, sigpipe);
 #endif /* !__NTVIS__ */
 
-     if (trans) 
+     if (trans)
        {/* We are the client if transmitting */
-         if (options)  
+         if (options)
            {
 #if defined(BSD42)
             if( setsockopt(fd, SOL_SOCKET, options, 0, 0) < 0)
@@ -919,29 +919,29 @@ if (bufmin > buflen) {
            sockets_err("setsockopt");
            }
 #ifdef TCP_NODELAY
-         if (nodelay) 
+         if (nodelay)
            {struct protoent *p;
             p = getprotobyname("tcp");
 #if defined(__lynx__)  || defined(__sun__)        || defined(__NTVIS__)
-                if( p && setsockopt(fd, p->p_proto, TCP_NODELAY, 
+                if( p && setsockopt(fd, p->p_proto, TCP_NODELAY,
                                       (char *) &one, sizeof(one)) < 0)
-#else 
-            if( p && setsockopt(fd, p->p_proto, TCP_NODELAY, 
+#else
+            if( p && setsockopt(fd, p->p_proto, TCP_NODELAY,
                                       &one, sizeof(one)) < 0)
 #endif /* __lynx__  __sun__ __NTVIS__ */
             sockets_err("setsockopt: nodelay");
            }
 #endif /* TCP_NODELAY */
-         if (connect(fd, SOCKADDR_CAST &sinhim, sizeof(sinhim) ) < 0) 
+         if (connect(fd, SOCKADDR_CAST &sinhim, sizeof(sinhim) ) < 0)
          sockets_err("connect");
-       }/* if (trans) */ 
-     else 
+       }/* if (trans) */
+     else
        {/* otherwise, we are the server and should listen for connections */
 
 errno = 0;
 
 #if defined(sgi) || ( defined(__osf__) && !defined(_CFE) )
-        if( listen(fd,1) <0 )   
+        if( listen(fd,1) <0 )
 #else
         if( listen(fd,0) <0 )   /* allow a queue of 0 */
 #endif
@@ -965,27 +965,27 @@ errno = 0;
    fd_set readfds, exceptfds;
    struct timeval tv_timeout;
    int n;
-   
+
    tv_timeout.tv_sec = timeout/1000;
    tv_timeout.tv_usec = (timeout%1000)*1000;
-   
+
    FD_ZERO(&readfds);
    FD_ZERO(&exceptfds);
    FD_SET(fd, &readfds);
    FD_SET(fd, &exceptfds);
-   
+
    n =  select( fd+1, &readfds, NULL, &exceptfds, &tv_timeout );
    if (n == 0 || n == SOCKET_ERROR) {
      sockets_err("select listen");
      return 0;
-   } 
+   }
  }
-        if((fd=accept(fd, SOCKADDR_CAST &frominet, &fromlen) ) < 0) 
+        if((fd=accept(fd, SOCKADDR_CAST &frominet, &fromlen) ) < 0)
                 sockets_err("accept");
 
         if (getpeername(fd, SOCKADDR_CAST &peer, &peerlen) < 0)
           sockets_err("getpeername");
-         
+
         fprintf(stderr,"ttcp-r: accept from %s\n",inet_ntoa(peer.sin_addr));
 
        } /* otherwise we are ... */
@@ -1014,7 +1014,7 @@ errno = 0;
          sockets_err("setsockopt");
      }
 #endif
-     
+
      if(udp && !no_start) {
        int start_count = 2;
        char start_pkt[START_PKT_LEN];
@@ -1042,8 +1042,8 @@ errno = 0;
          if (bufmin == -1) {
            rbuflen = buflen;
          } else {
-           /* set rbuflen to a random value evenly distributed in 
-              [bufmin, buflen].  As long as buflen is < 2^16, we can 
+           /* set rbuflen to a random value evenly distributed in
+              [bufmin, buflen].  As long as buflen is < 2^16, we can
               fit the calculation in 32 bits */
 #if defined(__NTVIS__)
            rbuflen = (( (unsigned long)rand() *
@@ -1057,7 +1057,7 @@ errno = 0;
          if (rndm) {
            unsigned int i, j, l;
            unsigned long data;
-           
+
            if (udp)
              l = 1;
            else
@@ -1077,12 +1077,12 @@ errno = 0;
              }
            }
          }
-         
+
          if ((cnt=Nwrite(fd,buf,rbuflen)) != (int)rbuflen)
          sockets_err("error from the socket write");
          /* increment sequence num if UDP */
          if (udp) buf[0] = (char)(((unsigned char)(buf[0])+1) & 0xFF);
-         
+
          if (debug)
            fprintf(stdout,"ttcp-t: %5d | %d Bytes Written in %d write commands \n",
                    ++nb, cnt, nbuf );
@@ -1097,7 +1097,7 @@ errno = 0;
          /* Check for the end of a burst */
          if (--k <= 0) {
            k = burstn;
-           
+
            /* sleep to avoid overrunning slower receivers - henry */
            if (udpsleep) {
              usleep(udpsleep);
@@ -1165,7 +1165,7 @@ errno = 0;
          /* Check for the end of a burst */
          if (--k <= 0) {
            k = burstn;
-           
+
            /* sleep to avoid overrunning slower receivers - henry */
            if (udpsleep) {
              usleep(udpsleep);
@@ -1193,12 +1193,12 @@ errno = 0;
        } /* while */
 
      } /* if (sinkmode) */
-     
+
      if (hash) {
        fprintf(stderr,"\n");
        fflush(stderr);
      }
-     
+
 #if defined(UNDER_CE)
 	 errno = WSAGetLastError();
 #endif
@@ -1215,7 +1215,7 @@ errno = 0;
          net_byte[2] = data_count & 0xFF; data_count >>= 8;
          net_byte[1] = data_count & 0xFF; data_count >>= 8;
          net_byte[0] = data_count & 0xFF;
-         
+
          while (end_count-- > 0) {
            Nwrite( fd, end_pkt, END_PKT_LEN ); /* rcvr end */
            if (udpsleep && end_count>0) usleep(udpsleep);
@@ -1223,13 +1223,13 @@ errno = 0;
        }
        result_summary();
      }
-   } /* trans */ 
-   else 
+   } /* trans */
+   else
    {
        if (udp) {
          udp_rcv_test();
        }
-       else 
+       else
        {/* not udp received transfer */
          while ((cnt=Nread(fd,buf,buflen)) > 0)
            {if(debug)fprintf(stdout,
@@ -1257,9 +1257,9 @@ errno = 0;
 
  if(errno) err("IO");
 
-#if defined(__NTVIS__) 
+#if defined(__NTVIS__)
   closesocket ( fd );
-#else 
+#else
   close ( fd );
 #endif /* __NTVIS__ */
 
@@ -1287,7 +1287,7 @@ udp_rcv_test(void)
   unsigned int expected_pkt_cnt = 0;
   unsigned char seq = 0;
   unsigned char buf_seq;
-  
+
   rcv_state = START_WAIT;
   while (rcv_state != END_TEST && (cnt=Nread(fd,buf,buflen)) > 0) {
     /* Determine the type of packet received */
@@ -1306,7 +1306,7 @@ udp_rcv_test(void)
       data_pkt_cnt++;
       pkt_type = DATA_PKT_TYPE;
     }
-           
+
     if (rcv_state == START_WAIT) {
       /* Wait until we see a vaild start packet */
       if (pkt_type == START_PKT_TYPE) {
@@ -1353,7 +1353,7 @@ udp_rcv_test(void)
         rcv_state = END_TEST;
       }
     }
-    
+
     /* tally data packets the same way from whatever state we are in */
     if (pkt_type == DATA_PKT_TYPE) {
       if (debug)
@@ -1406,7 +1406,7 @@ calc_cpu_time(
   double time;
   time_t ms;
   struct timeval tdiff, tend, tstart;
-    
+
   /* total user delta time + total system delta time */
   tvadd( &tend, &r1->ru_utime, &r1->ru_stime );   /* user + sys time  @ end */
   tvadd( &tstart, &r0->ru_utime, &r0->ru_stime ); /* user + sys time  @ start*/
@@ -1436,12 +1436,12 @@ calc_real_time(
   double time;
   time_t ms;
   struct timeval tdiff;
-    
+
   tvsub(&tdiff, t1 ,t0);
 
   /* useconds */
   time = ((double)tdiff.tv_sec)*1e6 + (double)tdiff.tv_usec;
-  
+
   /* debug mseconds */
   ms = tdiff.tv_sec*(time_t)1000 + tdiff.tv_usec/(time_t)1000;
   if (ms != (time_t)(time/1000.0)) {
@@ -1567,7 +1567,7 @@ outfmt(char format, double b)
   double giga = 1024.0 * 1024.0 * 1024.0;
   double mega = 1024.0 * 1024.0;
   double kilo = 1024.0;
-  
+
   if (format == 'A') {
     if (b >= giga)
       format = 'G';
@@ -1605,7 +1605,7 @@ outfmt(char format, double b)
     sprintf(obuf, "%4f b", b * 8.0);
     break;
   default:
-    sprintf(obuf, "default.........."); 
+    sprintf(obuf, "default..........");
   }
   return obuf;
 }
@@ -1616,13 +1616,13 @@ outfmt(char format, double b)
 
 #if defined(__osf__)
 /* getrusage defined in the system lib */
-#else 
+#else
 #if defined(__lynx__)
 /* getrusage defined in the system lib */
-#else 
-#if defined(__sun__) 
+#else
+#if defined(__sun__)
 /* getrusage defined in the system lib */
-#else 
+#else
 
 int
 getrusage(ignored, ru)
@@ -1637,26 +1637,26 @@ getrusage(ignored, ru)
   SYSTEMTIME SysTime;
 #if defined(UNDER_CE)
   phd = GetCurrentThread();
-  if( GetThreadTimes(phd, &CreateTime, &ExitTime, &KernelTime, &UserTime) 
-      != TRUE) 
+  if( GetThreadTimes(phd, &CreateTime, &ExitTime, &KernelTime, &UserTime)
+      != TRUE)
 #else
   phd = GetCurrentProcess();
-  if( GetProcessTimes(phd, &CreateTime, &ExitTime, &KernelTime, &UserTime) 
-      != TRUE) 
+  if( GetProcessTimes(phd, &CreateTime, &ExitTime, &KernelTime, &UserTime)
+      != TRUE)
 #endif
     {ru->ru_stime.tv_sec  = 0;
     ru->ru_stime.tv_usec = 0;
     ru->ru_utime.tv_sec  = 0;
     ru->ru_utime.tv_usec = 0;
-    } 
-  else 
+    }
+  else
    {
      (void) FileTimeToSystemTime(&KernelTime, &SysTime);
      /*
       * fprintf(stdout,
       * "System sec=%d, msec=%d\n", SysTime.wSecond, SysTime.wMilliseconds);
       */
-     ru->ru_stime.tv_sec  = SysTime.wSecond; 
+     ru->ru_stime.tv_sec  = SysTime.wSecond;
      ru->ru_stime.tv_usec = SysTime.wMilliseconds * 1000;
      (void) FileTimeToSystemTime(&UserTime, &SysTime);
      /*
@@ -1688,7 +1688,7 @@ return(0);
 #endif /* __osf__ */
 #endif /* SYSV */
 /*--------------------------------------------------------------------------*/
-#if defined(SYSV) 
+#if defined(SYSV)
 #if defined(__hpux__) || defined(_AIX) || defined(__sun__)
 /* gettimeofday defined in the system lib */
 #else
@@ -1696,7 +1696,7 @@ return(0);
 /* gettimeofday defined in the system lib */
 #else
 /*ARGSUSED*/
-static 
+static
 gettimeofday(tp, zp)
 struct timeval *tp;
 struct timezone *zp;
@@ -1705,7 +1705,7 @@ struct timezone *zp;
 #if defined(UNDER_CE)
 	SYSTEMTIME SystemTime;
 
-	GetLocalTime(&SystemTime); 
+	GetLocalTime(&SystemTime);
 	tp->tv_sec = SystemTime.wSecond;
 	tp->tv_usec = SystemTime.wMilliseconds * 1000;
 #else
@@ -1738,7 +1738,7 @@ prep_timer(void)
 /*--------------------------------------------------------------------------*/
 /*
  *                        R E A D _ T I M E R
- * 
+ *
  */
 void
 read_timer(void)
@@ -1747,7 +1747,7 @@ read_timer(void)
   gettimeofday(&time1, (struct timezone *)0);
 }
 /*--------------------------------------------------------------------------*/
-/*         Print the process usage calculated from timers values extracted 
+/*         Print the process usage calculated from timers values extracted
  *         before and after the transfer execution.
  */
 void
@@ -1763,66 +1763,66 @@ prusage(
   double realt = calc_real_time(t0, t1);
 
   /* t == total user delta time + total system delta time */
-  if (debug)   
-  { 
+  if (debug)
+  {
     printf("timers     : end          startup\n");
-    printf("user (sec) : %9ld  %9ld\n",r1->ru_utime.tv_sec, 
+    printf("user (sec) : %9ld  %9ld\n",r1->ru_utime.tv_sec,
            r0->ru_utime.tv_sec);
-    printf("user (usec): %9ld  %9ld\n",r1->ru_utime.tv_usec, 
+    printf("user (usec): %9ld  %9ld\n",r1->ru_utime.tv_usec,
            r0->ru_utime.tv_usec);
-    printf("sys  (sec) : %9ld  %9ld\n",r1->ru_stime.tv_sec, 
+    printf("sys  (sec) : %9ld  %9ld\n",r1->ru_stime.tv_sec,
            r0->ru_stime.tv_sec);
-    printf("sys  (usec): %9ld  %9ld\n",r1->ru_stime.tv_usec, 
+    printf("sys  (usec): %9ld  %9ld\n",r1->ru_stime.tv_usec,
            r0->ru_stime.tv_usec);
     printf("time (sec) : %9ld  %9ld\n",t1->tv_sec,t0->tv_sec);
     printf("time (usec): %9ld  %9ld\n",t1->tv_usec,t0->tv_usec);
   }
-  /* for the AIX debug, most counters are outside a good range  
+  /* for the AIX debug, most counters are outside a good range
     printf("                               r0                   r1\n");
-    printf("ru_ixrss    %20ld %20ld \n", r0->ru_ixrss  ,r1->ru_ixrss  );    
-    printf("ru_idrss    %20ld %20ld \n", r0->ru_idrss  ,r1->ru_idrss  );    
-    printf("ru_isrss    %20ld %20ld \n", r0->ru_isrss ,r1->ru_isrss );  
-    printf("ru_minflt   %20ld %20ld \n", r0->ru_minflt  ,r1->ru_minflt  );   
-    printf("ru_majflt   %20ld %20ld \n", r0->ru_majflt  ,r1->ru_majflt  );   
-    printf("ru_nswap    %20ld %20ld \n", r0->ru_nswap  ,r1->ru_nswap  );    
-    printf("ru_inblock  %20ld %20ld \n", r0->ru_inblock  ,r1->ru_inblock );  
-    printf("ru_oublock  %20ld %20ld \n", r0->ru_oublock  ,r1->ru_oublock  );  
-    printf("ru_msgsnd   %20ld %20ld \n", r0->ru_msgsnd  ,r1->ru_msgsnd  );   
-    printf("ru_msgrcv   %20ld %20ld \n", r0->ru_msgrcv  ,r1->ru_msgrcv   );   
-    printf("ru_nsignals %20ld %20ld \n", r0->ru_nsignals  ,r1->ru_nsignals); 
-    printf("ru_nvcsw    %20ld %20ld \n", r0->ru_nvcsw   ,r1->ru_nvcsw   );    
-    printf("ru_nivcsw   %20ld %20ld \n", r0->ru_nivcsw  ,r1->ru_nivcsw  );   
+    printf("ru_ixrss    %20ld %20ld \n", r0->ru_ixrss  ,r1->ru_ixrss  );
+    printf("ru_idrss    %20ld %20ld \n", r0->ru_idrss  ,r1->ru_idrss  );
+    printf("ru_isrss    %20ld %20ld \n", r0->ru_isrss ,r1->ru_isrss );
+    printf("ru_minflt   %20ld %20ld \n", r0->ru_minflt  ,r1->ru_minflt  );
+    printf("ru_majflt   %20ld %20ld \n", r0->ru_majflt  ,r1->ru_majflt  );
+    printf("ru_nswap    %20ld %20ld \n", r0->ru_nswap  ,r1->ru_nswap  );
+    printf("ru_inblock  %20ld %20ld \n", r0->ru_inblock  ,r1->ru_inblock );
+    printf("ru_oublock  %20ld %20ld \n", r0->ru_oublock  ,r1->ru_oublock  );
+    printf("ru_msgsnd   %20ld %20ld \n", r0->ru_msgsnd  ,r1->ru_msgsnd  );
+    printf("ru_msgrcv   %20ld %20ld \n", r0->ru_msgrcv  ,r1->ru_msgrcv   );
+    printf("ru_nsignals %20ld %20ld \n", r0->ru_nsignals  ,r1->ru_nsignals);
+    printf("ru_nvcsw    %20ld %20ld \n", r0->ru_nvcsw   ,r1->ru_nvcsw   );
+    printf("ru_nivcsw   %20ld %20ld \n", r0->ru_nivcsw  ,r1->ru_nivcsw  );
   */
 
   /* cpu time in mseconds */
   t = (int)(cput / 1000.0);
 
-  /* ms == value of the internal clock at the end of the xfer   */      
+  /* ms == value of the internal clock at the end of the xfer   */
   /*                             also called real time.         */
   /* real time in mseconds */
   ms = (int)(realt / 1000.0);
 
-  /* The display is based on variables provided by the function getrusage 
-     Info located in : /usr/include/sys/resource.h  
-  */                       
+  /* The display is based on variables provided by the function getrusage
+     Info located in : /usr/include/sys/resource.h
+  */
 #if defined(SYSV)
 
 #if defined(_AIX)
-  /* with AIX cernsp most counters are wrong  
+  /* with AIX cernsp most counters are wrong
    * cp = "%Uuser %Ssys %Ereal %P %Xi+%Dd %Mmaxrss %F+%Rpf %Ccsw\0";
    */
   cp = "%Uuser %Ssys %Ereal %P\0";
 
-#else 
+#else
 #if defined(__osf__)
   cp = "%Uuser %Ssys %Ereal %P %Xi+%Dd %Mmaxrss %F+%Rpf %Ccsw\0";
 #else
 #if defined(sgi)                        /* IRIX 3.3 will show 0 for %M,%F,%R,%C */
   cp = "%Uuser %Ssys %Ereal %P %Mmaxrss %F+%Rpf %Ccsw\0";
-#else 
+#else
 #if defined(__Lynx__)
   cp = "%Uuser %Ssys %Ereal %P\0";
-#else 
+#else
   cp = "%Uuser %Ssys %Ereal %P\0";    /* all SYSV except those mentionned */
 #endif /*__lynx__ */
 #endif /* sgi     */
@@ -1838,7 +1838,7 @@ prusage(
     if (*cp != '%') {
       putc(*cp, stderr);
       /*  *outp++ = *cp; */
-    } else if (cp[1]) 
+    } else if (cp[1])
       switch(*++cp) {
       case 'U':
         tvsub(&tdiff, &r1->ru_utime, &r0->ru_utime);
@@ -1865,7 +1865,7 @@ prusage(
           fprintf(stderr,"%d", i);
           break;
         }
-            
+
       case 'X':
         fprintf(stderr,"%ld", t == 0 ? 0 : (r1->ru_ixrss-r0->ru_ixrss)/t);
         break;
@@ -1884,7 +1884,7 @@ prusage(
       case 'M':
         fprintf(stderr,"%ld", r1->ru_maxrss/2);
         break;
-  
+
       case 'F':
         fprintf(stderr,"%ld", r1->ru_majflt-r0->ru_majflt);
         break;
@@ -1914,7 +1914,7 @@ prusage(
 }
 /*--------------------------------------------------------------------------*/
 /* add 2 times structure and move usec bigger than 1000000 to sec */
-void              
+void
 tvadd(tsum, t0, t1)
      struct timeval *tsum, *t0, *t1;
 {
@@ -1924,17 +1924,17 @@ tvadd(tsum, t0, t1)
 }
 /*--------------------------------------------------------------------------*/
 /* substract 2 time structure (t1 > t0) */
-void             
+void
 tvsub(tdiff, t1, t0)
      struct timeval *tdiff, *t1, *t0;
-{ 
+{
   tdiff->tv_sec = t1->tv_sec - t0->tv_sec;
   tdiff->tv_usec = t1->tv_usec - t0->tv_usec;
   if (tdiff->tv_usec < 0)  tdiff->tv_sec--, tdiff->tv_usec += 1000000;
 }
 
 /*--------------------------------------------------------------------------*/
-void          
+void
 psecs(int l)
 {
   int i = (int)l/3600;
@@ -1953,7 +1953,7 @@ psecs(int l)
 /*--------------------------------------------------------------------------*/
 /*                        N R E A D                                           */
 
-int                          
+int
 Nread(SOCKET s, void* bufp, int count )
 {
 #if defined(__lynx__) || defined(__svr4__) || defined(_AIX) || defined(__NTVIS__) || defined(__FreeBSD__)
@@ -1986,13 +1986,13 @@ Nread(SOCKET s, void* bufp, int count )
 
   }
 
-  if( udp )  
+  if( udp )
     {cnt = recvfrom( s, bufp, count, 0, SOCKADDR_CAST &from, &len );
     numCalls++;
-    } 
-  else 
+    }
+  else
     {if( b_flag )  cnt = mread( s, bufp, count );        /* fill bufp */
-    else 
+    else
       {
 #if defined(__NTVIS__)
         cnt = recv( s, bufp, count, 0 );
@@ -2001,7 +2001,7 @@ Nread(SOCKET s, void* bufp, int count )
 #endif /* __NTVIS__ */
         numCalls++;
       }
-    if (touchdata && cnt > 0) 
+    if (touchdata && cnt > 0)
       {register int c = cnt, sum = 0;
        register char *b = bufp;
        while (c--) sum += *b++;
@@ -2013,11 +2013,11 @@ Nread(SOCKET s, void* bufp, int count )
 /*--------------------------------------------------------------------------*/
 /*                        N W R I T E                                         */
 
-int                                    
+int
 Nwrite( int s, void* bufp, int count )
 {
   register int cnt;
-  if( udp )  
+  if( udp )
     {
     again:
       cnt = sendto( s, bufp, count, 0, SOCKADDR_CAST &sinhim,
@@ -2026,9 +2026,9 @@ Nwrite( int s, void* bufp, int count )
       numCalls++;
 
 #if defined(__NTVIS__)
-      if( cnt<0 && WSAENOBUFS == WSAGetLastError()) 
+      if( cnt<0 && WSAENOBUFS == WSAGetLastError())
 #else
-      if( cnt<0 && errno == ENOBUFS )  
+      if( cnt<0 && errno == ENOBUFS )
 #endif /* __NTVIS__ */
 
         { delay(18000); errno = 0; goto again; }
@@ -2042,13 +2042,13 @@ Nwrite( int s, void* bufp, int count )
       cnt = write( s, bufp, count );
       numCalls++;
 #endif /* __NTVIS__ */
-    }        
+    }
   return(cnt);
 }
 /*--------------------------------------------------------------------------*/
 void
 delay(us)
-int us;        
+int us;
 {
   struct timeval tv;
 
@@ -2062,7 +2062,7 @@ int us;
 #endif
 }
 /*--------------------------------------------------------------------------*/
-/*                        M R E A D        
+/*                        M R E A D
  *
  * This function performs the function of a read(II) but will
  * call read(II) multiple times in order to get the requested
@@ -2075,7 +2075,7 @@ mread(int s, char* bufp, unsigned n)
 {
   register unsigned        count = 0;
   register int                nread;
-  
+
   do
     {
 #if defined(__NTVIS__)
@@ -2102,8 +2102,8 @@ open_log()
  sprintf(logfile,"%s_%s",logfile_head,trans?"t":"r");
 
  fprintf(stderr,"open the log file >%s<\n",logfile);
- if ((fplog = fopen(logfile,"r")) == NULL)    
-       
+ if ((fplog = fopen(logfile,"r")) == NULL)
+
    {if ((fplog = fopen(logfile,"a+")) == NULL)
      {fprintf(stderr,"Failure : creation of the file >%s< \n",logfile );
       exit(1);
@@ -2136,14 +2136,14 @@ open_log()
       /* day-month-year, hour:minute\n\n");  */
     }
   } /* file already exist */
-   else 
+   else
    {fclose (fplog);
-     if ((fplog = fopen(logfile,"a+")) == NULL)     
+     if ((fplog = fopen(logfile,"a+")) == NULL)
        {fprintf(stderr,"Failure : access of the file >%s< \n",logfile );
         exit(1);
            }
    }
-} 
+}
 /*--------------------------------------------------------------------------*/
 void
 close_log()
@@ -2187,7 +2187,7 @@ getopt(int argc, char **argv, char *ostr)
     // update scanning pointer
     if (optind >= argc || *(place = argv[optind]) != '-' || !*++place) {
       place = EMSG;
-      return -1; 
+      return -1;
     }
     // place now points to the first char past the initial '-'
     if (place[0] == '-') {
@@ -2211,7 +2211,7 @@ getopt(int argc, char **argv, char *ostr)
     error("illegal option");
     return BADCH;
   }
-  if (*++oli != ':') {        
+  if (*++oli != ':') {
     /* don't need argument */
     optarg = NULL;
     if (!*place)
@@ -2280,7 +2280,7 @@ char More_help[] =
 "             ru_idrss  == An integral value of the amount of unshared memory \n"
 "                          in the data segment of a process (expressed in \n"
 "                          units of kilobytes * seconds-of-execution).\n";
- 
+
 char More_help1[] =
 "  (ru_maxrss/2)maxrss.\n"
 "             ru_maxrss == The maximum size, in kilobytes, of the used\n"
@@ -2309,9 +2309,9 @@ char More_help2[] =
 "         nbytes(byte), realt(sec), rate(MB/sec), I/O call,\n"
 "                 hours*3600+min*60+sec\n\n";
 
-  fprintf(stderr,More_help);
-  fprintf(stderr,More_help1);
-  fprintf(stderr,More_help2);
+  fprintf(stderr, "%s", More_help);
+  fprintf(stderr, "%s", More_help1);
+  fprintf(stderr, "%s", More_help2);
 }
 /*---------------------------------------------------------------------------*/
 void
@@ -2363,8 +2363,8 @@ char Usage[] =
 "    --debug   print extra debug outputs\n"
 #endif /* DEBUG */
 ;
- 
-  fprintf(stderr,Usage);
+
+  fprintf(stderr, "%s", Usage);
 }
 
 /* Define automatic Emacs variables for consistent code formatting */
-- 
2.5.0

