From a9549e1e7f2c69c768e4b84db5388048635a716a Mon Sep 17 00:00:00 2001
From: Dirk Neukirchen <dirkneukirchen@web.de>
Date: Wed, 20 May 2015 12:00:40 +0200
Subject: [PATCH 158/310] vtun: import vtun patches from buildroot

fix build issues since upstream is dead

Signed-off-by: Dirk Neukirchen <dirkneukirchen@web.de>
---
 net/vtun/patches/0001-fix-installation.patch       | 44 +++++++++++
 net/vtun/patches/0002-fix-ssl-headers-checks.patch | 47 +++++++++++
 net/vtun/patches/0003-fixup-configure.in.patch     | 92 ++++++++++++++++++++++
 3 files changed, 183 insertions(+)
 create mode 100644 net/vtun/patches/0001-fix-installation.patch
 create mode 100644 net/vtun/patches/0002-fix-ssl-headers-checks.patch
 create mode 100644 net/vtun/patches/0003-fixup-configure.in.patch

diff --git a/net/vtun/patches/0001-fix-installation.patch b/net/vtun/patches/0001-fix-installation.patch
new file mode 100644
index 0000000..d9659fa
--- /dev/null
+++ b/net/vtun/patches/0001-fix-installation.patch
@@ -0,0 +1,44 @@
+Makefile.in: fix installation steps
+
+Not sure what the reason for that patch is, but originally added by Ulf
+Samuelsson <ulf.samuelsson@atmel.com>, when upgrading from 2.6.x to 3.0.2.
+
+yann.morin.1998@free.fr: the initial commit in the Buildroot tree had the
+SoB by Ulf, but it was not explicitly reproduced here in the patch; so I
+added it here directly in the patch.
+
+Somewhat-signed-off-by: Ulf Samuelsson <ulf.samuelsson@atmel.com>
+Signed-off-by: "Yann E. MORIN" <yann.morin.1998@free.fr>
+diff -durN vtun-3.0.3.orig/Makefile.in vtun-3.0.3/Makefile.in
+--- vtun-3.0.3.orig/Makefile.in	2012-07-09 06:55:38.000000000 +0200
++++ vtun-3.0.3/Makefile.in	2013-02-16 23:28:47.034036869 +0100
+@@ -28,7 +28,7 @@
+ LEXFLAGS = -t 
+ 
+ INSTALL = @INSTALL@
+-INSTALL_OWNER = -o root -g 0
++INSTALL_OWNER =
+ 
+ prefix = @prefix@
+ exec_prefix = @exec_prefix@
+@@ -89,16 +89,15 @@
+ 
+ install_config: 
+ 	$(INSTALL) -d -m 755 $(INSTALL_OWNER) $(DESTDIR)$(ETC_DIR)
+-	if [ ! -f $(ETC_DIR)/vtund.conf ]; then \
+-	  $(INSTALL) -m 600 $(INSTALL_OWNER) vtund.conf $(DESTDIR)$(ETC_DIR); \
+-	fi
++	$(INSTALL) -m 600 $(INSTALL_OWNER) vtund.conf $(DESTDIR)$(ETC_DIR);
++	$(INSTALL) -m 600 $(INSTALL_OWNER) scripts/vtund-start.conf $(DESTDIR)$(ETC_DIR);
+ 
+ install: vtund install_config install_man
+-	$(INSTALL) -d -m 755 $(INSTALL_OWNER) $(DESTDIR)$(VAR_DIR)/run
+ 	$(INSTALL) -d -m 755 $(INSTALL_OWNER) $(DESTDIR)$(STAT_DIR)
+ 	$(INSTALL) -d -m 755 $(INSTALL_OWNER) $(DESTDIR)$(LOCK_DIR)
+ 	$(INSTALL) -d -m 755 $(INSTALL_OWNER) $(DESTDIR)$(SBIN_DIR)
+ 	$(INSTALL) -m 755 $(INSTALL_OWNER) vtund $(DESTDIR)$(SBIN_DIR)
+-	$(BIN_DIR)/strip $(DESTDIR)$(SBIN_DIR)/vtund
++	$(INSTALL) -m 755 -D $(INSTALL_OWNER) scripts/vtund.rc.debian \
++		$(DESTDIR)$(ETC_DIR)/init.d/S90vtun
+ 
+ # DO NOT DELETE THIS LINE -- make depend depends on it.
diff --git a/net/vtun/patches/0002-fix-ssl-headers-checks.patch b/net/vtun/patches/0002-fix-ssl-headers-checks.patch
new file mode 100644
index 0000000..765411a
--- /dev/null
+++ b/net/vtun/patches/0002-fix-ssl-headers-checks.patch
@@ -0,0 +1,47 @@
+configure.in: do not hard-code search patch for SSL headers
+
+Do. Not. Do. That. It breaks cross-compilation.
+
+Also use the SSL headers dir to look for blowfish headers.
+
+Signed-off-by: "Yann E. MORIN" <yann.morin.1998@free.fr>
+
+diff -durN vtun-3.0.3.orig/configure.in vtun-3.0.3/configure.in
+--- vtun-3.0.3.orig/configure.in	2009-03-29 12:08:51.000000000 +0200
++++ vtun-3.0.3/configure.in	2013-02-16 23:44:44.004339680 +0100
+@@ -166,7 +166,7 @@
+    AC_MSG_RESULT()
+    AC_CHECKING( for md5 Library and Header files ... )
+ AC_SEARCH_HEADERS(md5.h,
+-    $SSL_HDR_DIR /usr/include/openssl "" /usr/include /usr/include/ssl /usr/local/include /usr/local/ssl/include /usr/include/sys, 
++    $SSL_HDR_DIR "" , 
+     ,
+     AC_MSG_ERROR( SSL headers not found. )
+    )
+@@ -176,7 +176,7 @@
+    AC_MSG_RESULT()
+    AC_CHECKING( for blowfish Library and Header files ... )
+    AC_SEARCH_HEADERS(blowfish.h,
+-    $BLOWFISH_HDR_DIR /usr/include/ssl /usr/include/openssl /usr/include /usr/local/include /usr/local/ssl/include  /usr/include/crypto,
++    $BLOWFISH_HDR_DIR $SSL_HDR_DIR,
+ 	AC_CHECK_LIB(crypto, BF_set_key,
+ 	    [
+ 	       LIBS="$LIBS -lcrypto"
+@@ -193,7 +193,7 @@
+    AC_MSG_RESULT()
+    AC_CHECKING( for AES Library and Header files ... )
+    AC_SEARCH_HEADERS(aes.h,
+-    $SSL_HDR_DIR /usr/include/ssl /usr/include/openssl /usr/include /usr/local/include /usr/local/ssl/include  /usr/include/crypto,
++    $SSL_HDR_DIR ,
+ 	AC_CHECK_LIB(crypto, AES_set_encrypt_key,
+ 	    [
+ 	       AC_DEFINE(HAVE_SSL_AES)
+@@ -208,7 +208,7 @@
+    AC_MSG_RESULT()
+    AC_CHECKING( for EVP Library and Header files ... )
+    AC_SEARCH_HEADERS(evp.h,
+-    $SSL_HDR_DIR /usr/include/ssl /usr/include/openssl /usr/include /usr/local/include /usr/local/ssl/include  /usr/include/crypto,
++    $SSL_HDR_DIR ,
+ 	AC_CHECK_LIB(crypto, EVP_EncryptInit,
+ 	    [
+ 	       AC_DEFINE(HAVE_SSL_EVP)
diff --git a/net/vtun/patches/0003-fixup-configure.in.patch b/net/vtun/patches/0003-fixup-configure.in.patch
new file mode 100644
index 0000000..cb2ac67
--- /dev/null
+++ b/net/vtun/patches/0003-fixup-configure.in.patch
@@ -0,0 +1,92 @@
+configure.in: minimal syntax fixup for autoreconf
+
+This is the strictly minimal syntax fixups to make autoreconf happy...
+
+Signed-off-by: "Yann E. MORIN" <yann.morin.1998@free.fr>
+
+---
+Note: configure.in is still full of incorrect syntax, but fixing it is
+a task for another day, and would have to be upstreamed. But upstream
+looks to be moribund at best, if not dead... :-(
+
+So, keep it for ourselves for now... Too bad, vtun is really helpfull.
+
+--- vtun-3.0.3.orig/configure.in	2013-02-16 23:54:52.582451817 +0100
++++ vtun-3.0.3/configure.in	2013-02-17 00:03:13.640887353 +0100
+@@ -110,10 +110,10 @@
+ AC_SEARCH_LIBS(nanosleep, rt posix4)
+ 
+ dnl Check for setproctitle in libutil
+-AC_SEARCH_LIBS(setproctitle, util bsd, AC_DEFINE(HAVE_SETPROC_TITLE) )
++AC_SEARCH_LIBS(setproctitle, util bsd, AC_DEFINE([HAVE_SETPROC_TITLE],[],[Define to set title in /proc]) )
+ 
+ if test "$SHAPER" = "yes"; then
+-   AC_DEFINE(HAVE_SHAPER)
++   AC_DEFINE([HAVE_SHAPER],[],[Define to use shapper])
+ fi
+ 
+ if test "$ZLIB" = "yes"; then
+@@ -121,7 +121,7 @@
+    AC_CHECKING( for ZLIB Library and Header files ... )
+    AC_CHECK_LIB(z, deflate,
+ 	LIBS="$LIBS -lz"
+-	AC_DEFINE(HAVE_ZLIB),
++	AC_DEFINE([HAVE_ZLIB],[],[Define to use ZLIB]),
+ 	AC_MSG_ERROR( Zlib library not found.)
+    )
+ fi
+@@ -148,7 +148,7 @@
+ 	    AC_CHECK_LIB($I, lzo1x_decompress,
+ 	    [
+ 	          LIBS="$LIBS -l"$I
+-	       AC_DEFINE(HAVE_LZO)
++	       AC_DEFINE([HAVE_LZO],[],[Define to use LZO])
+ 	          havelzo=1
+ 	      ]
+ 	    )
+@@ -180,8 +180,8 @@
+ 	AC_CHECK_LIB(crypto, BF_set_key,
+ 	    [
+ 	       LIBS="$LIBS -lcrypto"
+-	       AC_DEFINE(HAVE_SSL)
+-	       AC_DEFINE(HAVE_SSL_BLOWFISH)
++	       AC_DEFINE([HAVE_SSL],[],[Define to use SSL])
++	       AC_DEFINE([HAVE_SSL_BLOWFISH],[],[Define to use blowfish])
+ 	    ],
+ 	    AC_MSG_ERROR( SSL library not found. )
+ 	),
+@@ -196,7 +196,7 @@
+     $SSL_HDR_DIR ,
+ 	AC_CHECK_LIB(crypto, AES_set_encrypt_key,
+ 	    [
+-	       AC_DEFINE(HAVE_SSL_AES)
++	       AC_DEFINE([HAVE_SSL_AES],[],[Define to use AES])
+ 	    ],
+ 	    AC_MSG_ERROR( AES library not found. )
+ 	),
+@@ -211,7 +211,7 @@
+     $SSL_HDR_DIR ,
+ 	AC_CHECK_LIB(crypto, EVP_EncryptInit,
+ 	    [
+-	       AC_DEFINE(HAVE_SSL_EVP)
++	       AC_DEFINE([HAVE_SSL_EVP],[],Define to use EVP)
+ 	    ],
+ 	    AC_MSG_ERROR( EVP library not found. )
+ 	),
+@@ -220,7 +220,7 @@
+ fi
+ 
+ if test "$NATHACK" = "yes"; then
+-   AC_DEFINE(ENABLE_NAT_HACK)
++   AC_DEFINE([ENABLE_NAT_HACK],[],[Define to use NAT hack])
+ fi
+ 
+ if test "$SOCKS" = "yes"; then
+@@ -274,6 +274,6 @@
+ REL=`echo 'BRANCH-3_X' | tr -d '$: \-' | sed 's/^[A-Za-z]*//' | sed 's/\_/\./'`
+ changequote([,])
+ 
+-AC_DEFINE_UNQUOTED(VTUN_VER, "$REL `date '+%m/%d/%Y'`")
++AC_DEFINE_UNQUOTED([VTUN_VER], ["$REL `date '+%m/%d/%Y'`"], [vtun version])
+ 
+ AC_OUTPUT(Makefile)
-- 
2.5.0

